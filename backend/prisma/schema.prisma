datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRES_DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId         String        @id @default(uuid())
  username       String        @unique
  email          String        @unique
  password       String
  profilePicture String?
  bio            String?
  interests      String?
  createdAt      DateTime      @default(now())
  posts          Post[]
  comments       Comment[]
  likes          Like[]
  shares         Share[]
  bookmarks      Bookmark[]
  followers      UserFollows[] @relation("userFollowsFollower")
  followings     UserFollows[] @relation("userFollowsFollowing")
}

model UserFollows {
  UserFollowsId Int    @id @default(autoincrement())
  followerId    String
  followingId   String
  follower      User   @relation("userFollowsFollower", fields: [followerId], references: [userId])
  following     User   @relation("userFollowsFollowing", fields: [followingId], references: [userId])

  @@unique([followerId, followingId])
}

model Post {
  postId    Int        @id @default(autoincrement())
  userId    String
  content   String
  address   String?
  location  Json?
  images    String[]
  tags      String[]
  createdAt DateTime   @default(now())
  User      User       @relation(fields: [userId], references: [userId])
  comments  Comment[]
  likes     Like[]
  shares    Share[]
  bookmarks Bookmark[]
}

model Comment {
  commentId Int      @id @default(autoincrement())
  postId    Int
  userId    String
  content   String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [userId])
  Post      Post     @relation(fields: [postId], references: [postId])
}

model Like {
  likeId    Int      @id @default(autoincrement())
  postId    Int
  userId    String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [userId])
  Post      Post     @relation(fields: [postId], references: [postId])
}

model Share {
  shareId   Int      @id @default(autoincrement())
  postId    Int
  userId    String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [userId])
  Post      Post     @relation(fields: [postId], references: [postId])
}

model Bookmark {
  bookmarkId Int      @id @default(autoincrement())
  postId     Int
  userId     String
  createdAt  DateTime @default(now())
  User       User     @relation(fields: [userId], references: [userId])
  Post       Post     @relation(fields: [postId], references: [postId])
}
