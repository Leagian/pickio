type User {
  user_id: ID!
  username: String!
  email: String!
  profile_picture: String
  bio: String
  interests: String
  created_at: String!
  followers: [UserFollows]
  following: [UserFollows]
}

type UserFollows {
  userFollowsId: ID!
  follower_id: ID!
  following_id: ID!
  follower: User
  following: User
  created_at: String!
}

type Post {
  postId: ID!
  user_id: ID!
  content: String!
  address: String!
  location: JSON
  images: [String]
  tags: [String]
  likes: [String]
  shareCount: Int!
  createdAt: String!
}

type Comment {
  commentId: ID!
  postId: ID!
  user_id: ID!
  content: String!
  createdAt: String!
}

type Share {
  shareId: ID!
  postId: ID!
  user_id: ID!
  sharedWithId: [ID]
  createdAt: String!
}

type Bookmark {
  bookmarkId: ID!
  user_id: ID!
  posts: [ID]
  createdAt: String!
}

type Query {
  getUsers: [User]
  getUserById(userId: ID!): User
}

type Mutation {
  createDummyUsers: [User]
}
