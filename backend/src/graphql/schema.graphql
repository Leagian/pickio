# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Bookmark {
  bookmarkId: ID!
  postId: String!
  userId: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Like {
  likeId: ID!
  postId: String!
  userId: String!
  createdAt: DateTime!
  user: User!
  post: Post!
}

type LikesAndCount {
  likes: [Like!]!
  count: Float!
}

type Share {
  shareId: ID!
  postId: String!
  userId: String!
  createdAt: DateTime!
  user: User!
  post: Post!
}

type Post {
  postId: ID!
  userId: String!
  content: String
  address: String
  location: JSONObject
  images: [String!]!
  tags: [String!]!
  createdAt: DateTime!
  user: User!
  comments: [Comment!]
  likes: [Like!]
  shares: [Share!]
  bookmarks: [Bookmark!]
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Comment {
  commentId: ID!
  postId: String!
  userId: String!
  content: String!
  createdAt: DateTime!
  user: User!
  post: Post!
}

type UserFollows {
  userFollowsId: ID!
  followerId: String!
  followingId: String!
  follower: User!
  following: User!
  createdAt: DateTime!
}

type User {
  userId: ID!
  username: String!
  email: String!
  password: String!
  profilePicture: String
  bio: String
  interests: String
  createdAt: DateTime!
  posts: [Post!]
  comments: [Comment!]!
  likes: [Like!]!
  shares: [Share!]!
  bookmarks: [Bookmark!]!
  followers: [UserFollows!]
  followings: [UserFollows!]
}

type UserSearchResult {
  userId: ID!
  username: String!
}

type LoginResponse {
  accessToken: String!
  user: User!
}

type Query {
  users: [User!]!
  userById(userId: String!): User!
  userByUsername(username: String!): User!
  followers(userId: String!): [User!]!
  followings(userId: String!): [User!]!
  getFollowersCount(userId: String!): Float!
  getFollowingsCount(userId: String!): Float!
  searchUsers(query: String!): [UserSearchResult!]!
  posts: [Post!]!
  post(postId: String!): Post!
  bookmarks(userId: String!): [Bookmark!]!
  comments(postId: String!): [Comment!]!
  getLikesAndCountByPostId(postId: String!): LikesAndCount!
  getSharedPosts(userId: String!): [Share!]!
}

type Mutation {
  login(loginUserInput: LoginUserInput!): LoginResponse!
  signup(userCreateInput: UserCreateInput!): User!
  createUser(data: UserCreateInput!): User!
  followUser(followerId: String!, followingId: String!): UserFollows!
  updateUser(userId: String!, data: UserUpdateInput!): User!
  deleteUser(userId: String!): User!
  createPost(data: PostCreateInput!): Post!
  updatePost(postId: String!, data: PostUpdateInput!): Post!
  deletePost(postId: String!): Post!
  createBookmark(data: BookmarkCreateInput!): Bookmark!
  deleteBookmark(bookmarkId: String!): Bookmark!
  createComment(postId: String!, userId: String!, data: CommentCreateInput!): Comment!
  deleteComment(postId: String!, commentId: String!, userId: String!): Comment!
  createLike(data: LikeCreateInput!): Like!
  deleteLike(postId: String!, likeId: String!): Like!
  createShare(data: ShareCreateInput!): Share!
  sharePostWithFollowings(userId: String!, postId: String!, followingIds: [String!]!): [Share!]!
  deleteShare(shareId: String!): Share!
}

input LoginUserInput {
  username: String!
  password: String!
}

input UserCreateInput {
  username: String!
  email: String!
  password: String!
  profilePicture: String
  bio: String
  interests: String
}

input UserUpdateInput {
  username: String
  email: String
  password: String
  profilePicture: String
  bio: String
  interests: String
}

input PostCreateInput {
  userId: String!
  content: String
  address: String
  location: JSONObject
  images: [String!]!
  tags: [String!]!
}

input PostUpdateInput {
  userId: String!
  content: String
  address: String
  location: JSONObject
  images: [String!]
  tags: [String!]
}

input BookmarkCreateInput {
  postId: String!
  userId: String!
}

input CommentCreateInput {
  postId: String!
  userId: String!
  content: String!
}

input LikeCreateInput {
  postId: String!
  userId: String!
}

input ShareCreateInput {
  postId: String!
  userId: String!
}